name: Health Flash Report - Daily Content Update

on:
  schedule:
    # Run daily at 6 AM UTC (1 AM EST, 10 PM PST)
    - cron: '0 6 * * *'
  workflow_dispatch:  # Allow manual triggering
  push:
    branches: [ main ]  # Also run on push to main

jobs:
  update-content:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Fetch full history for proper git operations

    - name: Set up Python 3.9
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'

    - name: Cache Python packages
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        if [ -f requirements.txt ]; then
          pip install -r requirements.txt
        else
          # Install common dependencies if requirements.txt doesn't exist
          pip install requests beautifulsoup4 feedparser
        fi

    - name: Configure Git
      run: |
        git config --global user.name "Health Flash Report Bot"
        git config --global user.email "bot@healthflashreport.com"

    - name: Pull latest changes
      run: |
        git pull origin main || echo "No remote changes to pull"

    - name: Run content aggregation
      env:
        PERPLEXITY_API_KEY: ${{ secrets.PERPLEXITY_API_KEY }}
        NEWS_API_KEY: ${{ secrets.NEWS_API_KEY }}
        REDDIT_CLIENT_ID: ${{ secrets.REDDIT_CLIENT_ID }}
        REDDIT_CLIENT_SECRET: ${{ secrets.REDDIT_CLIENT_SECRET }}
      run: |
        if [ -f aggregator.py ]; then
          echo "Running Health Flash Report aggregator..."
          python aggregator.py
        else
          echo "No aggregator.py found - skipping content update"
        fi

    - name: Check for changes
      id: changes
      run: |
        if git diff --quiet && git diff --cached --quiet; then
          echo "No changes detected"
          echo "has_changes=false" >> $GITHUB_OUTPUT
        else
          echo "Changes detected"
          echo "has_changes=true" >> $GITHUB_OUTPUT
        fi

    - name: Commit and push changes
      if: steps.changes.outputs.has_changes == 'true'
      run: |
        git add .
        git commit -m "🧬 Health Flash Report - Daily content update $(date '+%Y-%m-%d %H:%M UTC')

        - Updated longevity research news
        - Refreshed biohacking studies
        - New health tech developments
        - Updated Flash Summary with latest insights
        
        Auto-generated by GitHub Actions"
        
        # Push with retry logic
        for i in {1..3}; do
          if git push origin main; then
            echo "✅ Successfully pushed changes"
            break
          else
            echo "⚠️ Push attempt $i failed, retrying in 5 seconds..."
            sleep 5
            git pull --rebase origin main || true
          fi
        done

    - name: Deployment status
      run: |
        if [ "${{ steps.changes.outputs.has_changes }}" == "true" ]; then
          echo "🎉 Health Flash Report content updated and deployed!"
          echo "🔗 Repository: https://github.com/The-Flash-Report/healthflashreport"
          echo "🌐 Live site: https://healthflashreport.com"
        else
          echo "ℹ️ No content updates needed - site is current"
        fi

    # Optional: Create deployment notification
    - name: Notify deployment
      if: steps.changes.outputs.has_changes == 'true'
      run: |
        echo "Health Flash Report has been updated with the latest longevity research and biohacking news!"
        # Add webhook notifications here if needed
